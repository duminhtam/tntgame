{
  "name": "stream-line-wrapper",
  "version": "0.1.1",
  "description": "Wrap each lines of a stream with a prefix, suffix or a custom function.",
  "main": "index.js",
  "directories": {
    "example": "example",
    "test": "test"
  },
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/neoziro/stream-line-wrapper.git"
  },
  "keywords": [
    "stream",
    "line",
    "wrapper",
    "suffix",
    "prefix"
  ],
  "author": {
    "name": "Greg Berg√©",
    "email": "berge.greg@gmail.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/neoziro/stream-line-wrapper/issues"
  },
  "homepage": "https://github.com/neoziro/stream-line-wrapper",
  "devDependencies": {
    "mocha": "~1.17.1",
    "chai": "~1.9.0"
  },
  "dependencies": {
    "async": "~0.2.10"
  },
  "readme": "# Stream line wrapper [![Build Status](https://travis-ci.org/neoziro/stream-line-wrapper.png?branch=master)](https://travis-ci.org/neoziro/stream-line-wrapper)\n\nWrap each lines of a stream with a prefix, suffix or a custom function.\n\n## Usage\n\n```js\nvar childProcess = require('child_process');\nvar LineWrapper = require('stream-line-wrapper');\nvar ls = childProcess.exec('ls');\n\nvar lineWrapper = new LineWrapper({ prefix: '-- ' });\nls.stdout.pipe(lineWrapper).pipe(process.stdout);\n\n// -- file1.js\n// -- file2.js\n// -- file3.js\n```\n\n## Options\n\n### prefix\n\nPrefix each lines with a string.\n\n```js\nvar lineWrapper = new LineWrapper({ prefix: '-- ' });\nls.stdout.pipe(lineWrapper).pipe(process.stdout);\n\n// -- file1.js\n```\n\n### suffix\n\nSuffix each lines with a string.\n\n```js\nvar lineWrapper = new LineWrapper({ suffix: ' @' });\nls.stdout.pipe(lineWrapper).pipe(process.stdout);\n\n// file1.js @\n```\n\n### wrapper\n\nUse a function to wrapper each lines.\n\n```js\nvar lineWrapper = new LineWrapper({ wrapper: countChars });\n\n/**\n * Prefix each lines with char count.\n *\n * @param {String} line\n * @param {Function} cb\n */\n\nfunction countChars(line, cb) {\n  return cb(null, '(' + line.length + ') ' + line);\n}\n\nls.stdout.pipe(lineWrapper).pipe(process.stdout);\n\n// (8) file1.js\n```\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "stream-line-wrapper@0.1.1",
  "_shasum": "3e2be1d368c6356f90aeef64786683f3eee3eea7",
  "_from": "stream-line-wrapper@^0.1.1",
  "_resolved": "https://registry.npmjs.org/stream-line-wrapper/-/stream-line-wrapper-0.1.1.tgz"
}
